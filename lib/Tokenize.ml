let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\250\255\087\000\252\255\253\255\005\000\255\255\001\000\
    \250\255\144\000\255\255\251\255\252\255\253\255\254\255\003\000\
    \254\255\255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\004\000\255\255\255\255\001\000\255\255\255\255\
    \255\255\005\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\255\255\000\000\000\000\255\255\000\000\008\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\016\000\
    \000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\005\000\005\000\000\000\000\000\005\000\005\000\005\000\
    \000\000\000\000\005\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \005\000\000\000\004\000\010\000\002\000\005\000\000\000\003\000\
    \000\000\000\000\017\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\000\000\000\000\009\000\000\000\002\000\
    \000\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\002\000\002\000\000\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\011\000\000\000\000\000\000\000\002\000\000\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\011\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\
    \006\000\010\000\012\000\017\000\014\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\005\000\005\000\
    \255\255\255\255\005\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\007\000\000\000\005\000\255\255\000\000\
    \255\255\255\255\015\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\007\000\255\255\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\002\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\002\000\002\000\255\255\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\009\000\255\255\255\255\255\255\002\000\255\255\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\009\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\009\000\255\255\
    \000\000\007\000\009\000\015\000\009\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec tokenize acc lexbuf =
   __ocaml_lex_tokenize_rec acc lexbuf 0
and __ocaml_lex_tokenize_rec acc lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 22 "lib/Tokenize.mll"
                        ( List.rev acc )
# 140 "lib/Tokenize.ml"

  | 1 ->
# 23 "lib/Tokenize.mll"
                             ( tokenize acc lexbuf )
# 145 "lib/Tokenize.ml"

  | 2 ->
# 24 "lib/Tokenize.mll"
                        ( tok_dquote acc (Buffer.create 16) lexbuf )
# 150 "lib/Tokenize.ml"

  | 3 ->
# 25 "lib/Tokenize.mll"
                        ( tok_squote acc (Buffer.create 16) lexbuf )
# 155 "lib/Tokenize.ml"

  | 4 ->
let
# 26 "lib/Tokenize.mll"
                               s
# 161 "lib/Tokenize.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 27 "lib/Tokenize.mll"
                        ( tokenize (s :: acc) lexbuf )
# 165 "lib/Tokenize.ml"

  | 5 ->
let
# 28 "lib/Tokenize.mll"
         c
# 171 "lib/Tokenize.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 28 "lib/Tokenize.mll"
                        ( tokenize (String.make 1 c :: acc) lexbuf )
# 175 "lib/Tokenize.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_tokenize_rec acc lexbuf __ocaml_lex_state

and tok_dquote acc buf lexbuf =
   __ocaml_lex_tok_dquote_rec acc buf lexbuf 7
and __ocaml_lex_tok_dquote_rec acc buf lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 31 "lib/Tokenize.mll"
                        ( tokenize (Buffer.contents buf :: acc) lexbuf )
# 187 "lib/Tokenize.ml"

  | 1 ->
# 32 "lib/Tokenize.mll"
                        ( Buffer.add_char buf '\t'; tok_dquote acc buf lexbuf )
# 192 "lib/Tokenize.ml"

  | 2 ->
# 33 "lib/Tokenize.mll"
                        ( Buffer.add_char buf '\n'; tok_dquote acc buf lexbuf )
# 197 "lib/Tokenize.ml"

  | 3 ->
# 34 "lib/Tokenize.mll"
                        ( Buffer.add_char buf '\r'; tok_dquote acc buf lexbuf )
# 202 "lib/Tokenize.ml"

  | 4 ->
let
# 35 "lib/Tokenize.mll"
                           c
# 208 "lib/Tokenize.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 36 "lib/Tokenize.mll"
                        ( Buffer.add_char buf c; tok_dquote acc buf lexbuf )
# 212 "lib/Tokenize.ml"

  | 5 ->
let
# 37 "lib/Tokenize.mll"
         c
# 218 "lib/Tokenize.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 37 "lib/Tokenize.mll"
                        ( Buffer.add_char buf c; tok_dquote acc buf lexbuf )
# 222 "lib/Tokenize.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_tok_dquote_rec acc buf lexbuf __ocaml_lex_state

and tok_squote acc buf lexbuf =
   __ocaml_lex_tok_squote_rec acc buf lexbuf 15
and __ocaml_lex_tok_squote_rec acc buf lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 40 "lib/Tokenize.mll"
                        ( tokenize (Buffer.contents buf :: acc) lexbuf )
# 234 "lib/Tokenize.ml"

  | 1 ->
let
# 41 "lib/Tokenize.mll"
         c
# 240 "lib/Tokenize.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 41 "lib/Tokenize.mll"
                        ( Buffer.add_char buf c; tok_squote acc buf lexbuf )
# 244 "lib/Tokenize.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_tok_squote_rec acc buf lexbuf __ocaml_lex_state

;;

# 43 "lib/Tokenize.mll"
 
let string s =
  tokenize [] (Lexing.from_string s)

# 256 "lib/Tokenize.ml"
